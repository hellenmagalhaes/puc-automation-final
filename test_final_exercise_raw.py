# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class HomePage:
   
   def __init__(self, driver):
      self._driver = driver

   def wait_page_load(self):
      elements = self._driver.find_elements(By.CSS_SELECTOR, ".py-overlay")
      while len(elements) > 0:
        elements = self._driver.find_elements(By.CSS_SELECTOR, ".py-overlay")
        time.sleep(0.5)

   def add_student(self, name):
      self._driver.find_element(By.ID, "student-nome").click()
      self._driver.find_element(By.ID, "student-nome").send_keys(name)
      self._driver.find_element(By.ID, "student-btn").click()
  
   def add_course(self, course):
      self._driver.find_element(By.ID, "course-nome").click()
      self._driver.find_element(By.ID, "course-nome").clear()
      element = self._driver.find_element(By.ID, "course-nome")
      actions = ActionChains(self._driver)
      actions.double_click(element).perform()
      self._driver.find_element(By.ID, "course-nome").send_keys(course)
      self._driver.find_element(By.ID, "course-btn").click()

   def add_student_to_course(self):
      self._driver.find_element(By.ID, "student-id").click()
      self._driver.find_element(By.ID, "student-id").send_keys("1")
      self._driver.find_element(By.ID, "course-id").click()
      self._driver.find_element(By.ID, "course-id").send_keys("1")
      self._driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(4) > #course-btn").click()

   def add_discipline(self, discipline):
      self._driver.find_element(By.ID, "discipline-nome").click()
      self._driver.find_element(By.ID, "discipline-nome").clear()
      self._driver.find_element(By.ID, "discipline-nome").send_keys(discipline)
      self._driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()

   def subscribe_discipline_to_course(self):
      self._driver.find_element(By.ID, "discipline-nome").click()
      self._driver.find_element(By.ID, "discipline-nome").send_keys("Selenium")
      self._driver.find_element(By.ID, "course-discipline-id").click()
      self._driver.find_element(By.ID, "course-discipline-id").send_keys("1")
      self._driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()

   def subscribe_student_to_discipline(self, student_id, discipline_id):
      self._driver.find_element(By.ID, "subscribe-student-id").click()
      self._driver.find_element(By.ID, "subscribe-student-id").clear()
      self._driver.find_element(By.ID, "subscribe-student-id").send_keys(student_id)
      self._driver.find_element(By.ID, "subscribe-discipline-id").click()
      self._driver.find_element(By.ID, "subscribe-discipline-id").clear()
      self._driver.find_element(By.ID, "subscribe-discipline-id").send_keys(discipline_id)
      self._driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(6) > #course-btn").click()


class TestDemo():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_demo(self):
    self.driver.get("https://tdd-detroid.onrender.com")
    self.driver.set_window_size(970, 555)

    homepage = HomePage(self.driver)
    homepage.wait_page_load()

    homepage.add_student(name = "Hellen")
    assert (
      "INFO Added student id: 1, Name: Hellen"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p").text
    )

    homepage.add_course(course = "Automacao de testes")
    assert (
      "INFO Added student id: 1, Name: Hellen"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(2)").text
    )
    
    homepage.add_student_to_course()
    assert (
      "INFO Added student id: 1, Name: Hellen"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(3)").text
    )
    
    homepage.subscribe_discipline_to_course()
    assert (
      "FAIL Necessários 3 cursos para se criar a primeira matéria"
      in self.get_first_log()
    )
    
    homepage.add_course(course = "Continuos integration")
    homepage.add_course(course = "devOps")

    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()

    assert (
      "INFO Added discipline id: 1, Name: Selenium, Course: 1"
      in self.get_first_log()
    )
    
    homepage.add_discipline(discipline = "Cypress")
    homepage.add_discipline(discipline = "Playwright")

    homepage.subscribe_student_to_discipline(1,1)

    assert (
      "WARN Aluno deve se inscrever em 3 materias no minimo"
      in self.get_first_log()
    )


    homepage.subscribe_student_to_discipline(1,2)
    homepage.subscribe_student_to_discipline(1,3)

    homepage.add_discipline(discipline = "Appium")
    homepage.subscribe_student_to_discipline(1,4)
    
    self.driver.close()

  def get_first_log(self):
      return self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(1)").text

